{"version":3,"sources":["../src/ContactList.js"],"names":["writeFile","util","promisify","fs","readFile","Contact","constructor","obj","name","age","addPhone","number","phoneNumber","call","console","log","birthday","ContactList","filename","list","load","addContact","contact","push","save","path","resolve","__dirname","JSON","stringify","then","readFilePromise","fileString","parse","map","contactObj","Promise"],"mappings":";;;;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAFA;AAIA,MAAMA,YAAYC,eAAKC,SAAL,CAAeC,aAAGH,SAAlB,CAAlB,C,CANA;;AAOA,MAAMI,WAAWH,eAAKC,SAAL,CAAeC,aAAGC,QAAlB,CAAjB;;AAEO,MAAMC,OAAN,CAAc;AACjBC,aAAYC,GAAZ,EAAiB;AACb,OAAKC,IAAL,GAAYD,IAAIC,IAAhB;AACA,OAAKC,GAAL,GAAWF,IAAIE,GAAf;AACN;;AAEEC,UAASC,MAAT,EAAiB;;AAEb,SAAO,KAAKC,WAAL,GAAmBD,MAA1B;AACH;AACAE,QAAO;;AAEH,MAAI,KAAKD,WAAT,EACIE,QAAQC,GAAR,CAAY,aAAa,KAAKP,IAAlB,GAAyB,MAAzB,GAAkC,KAAKI,WAAnD,EADJ,KAGIE,QAAQC,GAAR,CAAY,KAAKP,IAAL,GAAY,6BAAxB;AAEP;AACDQ,YAAW;;AAEPF,UAAQC,GAAR,CAAY,aAAa,KAAKP,IAAlB,GAAyB,WAAzB,IAAwC,KAAKC,GAAL,GAAS,CAAjD,IAAsD,cAAlE;AAEH;AAtBe,C,QAARJ,O,GAAAA,O;AAuBZ;;AAEM,MAAMY,WAAN,CAAkB;AACxBX,aAAYY,QAAZ,EAAqB;AACpB,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKE,IAAL;AACA;;AAEDC,YAAWC,OAAX,EAAmB;AAClB,MAAGA,mBAAmBjB,OAAtB,EAA+B;AAC9B,QAAKc,IAAL,CAAUI,IAAV,CAAeD,OAAf;AACAR,WAAQC,GAAR,CAAY,WAAZ,EAAyB,KAAKI,IAA9B;AACA,UAAO,KAAKK,IAAL,CAAU,KAAKL,IAAf,CAAP;AACA;AACD;;AAEDK,MAAKL,IAAL,EAAU;AACT,SAAOnB,UAAUyB,eAAKC,OAAL,CAAaC,SAAb,EAAwB,KAAKT,QAA7B,CAAV,EAAkDU,KAAKC,SAAL,CAAeV,IAAf,CAAlD,EAAwE,MAAxE,EACNW,IADM,CACD,MAAM;AACX,UAAOX,IAAP;AACA,GAHM,CAAP;AAIA;;AAEDC,QAAM;AACL,QAAMW,kBAAkB3B,SAASqB,eAAKC,OAAL,CAAaC,SAAb,EAAwB,KAAKT,QAA7B,CAAT,EAAiD,MAAjD,CAAxB;;AAEA,SAAOa,gBACND,IADM,CACDE,cAAc;AACnB,QAAKb,IAAL,GAAYS,KAAKK,KAAL,CAAWD,UAAX,EACXE,GADW,CACPC,cAAc,IAAI9B,OAAJ,CAAY8B,UAAZ,CADP,CAAZ;;AAGA,UAAOC,QAAQV,OAAR,CAAgB,IAAhB,CAAP;AACA,GANM,CAAP;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAzCuB,C,QAAZT,W,GAAAA,W;AA0CZ","file":"ContactList.js","sourcesContent":["// const fs = require(\"fs\");\nimport fs from \"fs\";\n// const util = require(\"util\");\nimport util from \"util\";\nimport path from \"path\";\n\nconst writeFile = util.promisify(fs.writeFile);\nconst readFile = util.promisify(fs.readFile);\n\nexport class Contact {\n    constructor(obj) {\n        this.name = obj.name;\n        this.age = obj.age;\n\t};\n\t\n    addPhone(number) {\n\n        return this.phoneNumber = number;\n    }\n     call() {\n\n         if (this.phoneNumber)\n             console.log(\"Calling \" + this.name + \" at \" + this.phoneNumber);\n         else\n             console.log(this.name + \" has no phone number saved.\");\n\n     }\n     birthday() {\n\n         console.log(\"Wishing \" + this.name + \" a happy \" + (this.age+1) + \"th birthday!\");\n\n     }\n};\n\nexport class ContactList {\n\tconstructor(filename){\n\t\tthis.list = [];\n\t\tthis.filename = filename;\n\t\tthis.load();\n\t}\n\n\taddContact(contact){\n\t\tif(contact instanceof Contact) {\n\t\t\tthis.list.push(contact);\n\t\t\tconsole.log(\"this.list\", this.list);\n\t\t\treturn this.save(this.list);\n\t\t}\n\t}\n\n\tsave(list){\n\t\treturn writeFile(path.resolve(__dirname, this.filename), JSON.stringify(list), \"utf8\")\n\t\t.then(() => {\n\t\t\treturn list;\t\n\t\t});\n\t}\n\n\tload(){\n\t\tconst readFilePromise = readFile(path.resolve(__dirname, this.filename), \"utf8\");\n\n\t\treturn readFilePromise\n\t\t.then(fileString => {\n\t\t\tthis.list = JSON.parse(fileString)\n\t\t\t.map(contactObj => new Contact(contactObj));\n\n\t\t\treturn Promise.resolve(null);\n\t\t});\n\t\t// return new Promise((resolve, reject) => {\n\t\t// \treadFilePromise\n\t\t// \t.then(fileString => {\n\t\t// \t\tthis.list = JSON.parse(fileString)\n\t\t// \t\t.map(contactObj => new Contact(contactObj));\n\t\t\t\t\n\t\t// \t\tresolve(null);\n\t\t// \t});\n\t\t// });\n\t}\n};"]}