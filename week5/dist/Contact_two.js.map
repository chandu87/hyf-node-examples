{"version":3,"sources":["../src/Contact_two.js"],"names":["Person","constructor","name","id","age","val","_age","_name","_id","Contact","phone","email","nameParts","split","firstName","shift","lastName","join","toString","length","_phone","includes","_email","console","log"],"mappings":";;;;;AAAA,MAAMA,MAAN,CAAa;AACXC,cAAYC,IAAZ,EAAkBC,EAAlB,EAAsBC,GAAtB,EAA2B;AACzB,QAAI,CAACF,IAAD,IAAS,CAACC,EAAd,EAAkB,MAAM,2BAAN;AAClB,SAAKD,IAAL,GAAYA,IAAZ;AACA,QAAIE,GAAJ,EAAS,KAAKA,GAAL,GAAWA,GAAX;AACT,SAAKD,EAAL,GAAUA,EAAV;AACD;;AAED,MAAIC,GAAJ,CAAQC,GAAR,EAAa;AACX;AACA,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAQ,KAAKC,IAAL,GAAYD,GAApB;AAC7B,UAAM,yBAAN;AACD;;AAED,MAAID,GAAJ,GAAU;AACR,WAAO,KAAKE,IAAZ;AACD;;AAED,MAAIJ,IAAJ,CAASG,GAAT,EAAc;AACZ,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAQ,KAAKE,KAAL,GAAaF,GAArB;AAC7B,UAAM,0BAAN;AACD;;AAED,MAAIH,IAAJ,GAAW;AACT,WAAO,KAAKK,KAAZ;AACD;AACD,MAAIJ,EAAJ,CAAOE,GAAP,EAAW;AACT,QAAG,OAAOA,GAAP,KAAgB,QAAnB,EACE,OAAO,KAAKG,GAAL,GAAWH,GAAlB;AACF,UAAM,uBAAN;AACD;AACD,MAAIF,EAAJ,GAAQ;AACN,WAAO,KAAKK,GAAZ;AACD;AAjCU;;AAoCb,MAAMC,OAAN,SAAsBT,MAAtB,CAA6B;AAC3BC,cAAYC,IAAZ,EAAkBC,EAAlB,EAAsBC,GAAtB,EAA2BM,KAA3B,EAAkCC,KAAlC,EAAyC;AACvC,QAAIP,GAAJ,EAAS;AACP,YAAMF,IAAN,EAAYC,EAAZ,EAAgBC,GAAhB;AACD,KAFD,MAEO,MAAMF,IAAN,EAAYC,EAAZ;AACP,QAAIQ,SAASD,KAAb,EAAoB;AACd,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKC,KAAL,GAAaA,KAAb;AACD,KAHL,MAGS;AACH,YAAM,qCAAN;AACD;AACL,QAAIC,YAAYV,KAAKW,KAAL,CAAW,GAAX,CAAhB;AACA,SAAKC,SAAL,GAAiBF,UAAUG,KAAV,EAAjB;AACA,SAAKC,QAAL,GAAgBJ,UAAUK,IAAV,CAAe,GAAf,CAAhB;AACD;AACD,MAAIP,KAAJ,CAAUL,GAAV,EAAc;AACZ,QAAG,OAAOA,GAAP,KAAgB,QAAhB,IAA4BA,IAAIa,QAAJ,GAAeC,MAAf,IAAyB,CAAxD,EACC,OAAO,KAAKC,MAAL,GAAcf,GAArB;AACH,UAAM,yCAAN;AACC;AACD,MAAIK,KAAJ,GAAW;AACT,WAAO,KAAKU,MAAZ;AACD;AACD,MAAIT,KAAJ,CAAUN,GAAV,EAAc;AACZ,QAAIA,IAAIgB,QAAJ,CAAa,GAAb,CAAJ,EACC,OAAO,KAAKC,MAAL,GAAcjB,GAArB;AACD,UAAM,2BAAN;AACD;AACD,MAAIM,KAAJ,GAAW;AACT,WAAO,KAAKW,MAAZ;AACD;AACD,MAAInB,EAAJ,CAAOE,GAAP,EAAW;AACTkB,YAAQC,GAAR,CAAY,KAAKF,MAAjB;AACA,SAAKd,GAAL,GAAW,KAAKc,MAAhB;AACD;AAlC0B;;AAqC7B;QACStB,M,GAAAA,M;QAAQS,O,GAAAA,O","file":"Contact_two.js","sourcesContent":["class Person {\n  constructor(name, id, age) {\n    if (!name || !id) throw \"Name and id are required.\";\n    this.name = name;\n    if (age) this.age = age;\n    this.id = id;\n  }\n\n  set age(val) {\n    // console.log(val);\n    if (typeof val === \"number\") return (this._age = val);\n    throw \"Age should be a number.\";\n  }\n\n  get age() {\n    return this._age;\n  }\n\n  set name(val) {\n    if (typeof val === \"string\") return (this._name = val);\n    throw \"Name should be a string.\";\n  }\n\n  get name() {\n    return this._name;\n  }\n  set id(val){\n    if(typeof(val) === 'number')\n      return this._id = val;\n    throw \"ID should be a number\";\n  }\n  get id(){\n    return this._id;\n  }\n}\n\nclass Contact extends Person {\n  constructor(name, id, age, phone, email) {\n    if (age) {\n      super(name, id, age);\n    } else super(name, id);\n    if (email && phone) {\n          this.phone = phone;\n          this.email = email;\n        }else{\n          throw \"Phone Number and Email-ID is needed\";\n        }\n    let nameParts = name.split(\" \");\n    this.firstName = nameParts.shift();\n    this.lastName = nameParts.join(\" \");\n  }\n  set phone(val){\n    if(typeof(val) === 'number' && val.toString().length == 8)\n     return this._phone = val;\n  throw \"Phone number should be a 8 digit number\";\n  }\n  get phone(){\n    return this._phone;\n  }\n  set email(val){\n    if (val.includes(\"@\")) \n     return this._email = val;\n    throw \"Email should contain '@' \";\n  }\n  get email(){\n    return this._email;\n  }\n  set id(val){\n    console.log(this._email);\n    this._id = this._email;\n  }\n}\n\n// export default Contact;\nexport { Person, Contact };\n"]}